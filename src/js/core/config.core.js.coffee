'use strict'

dependencies = [
  'ui.router',
  'ct.ui.router.extras',
  'ngAnimate',
  'ngResource',
  'ngTouch',
  'ngSanitize',
  'ngCookies',
  'ui.bootstrap',
  'ui.checkbox',
  'http-auth-interceptor',
  'toastr',
  'angular-loading-bar',
  'oc.lazyLoad',
  'ngScrollable',

  'angular-hal',
  'ngStorage',

  # This module will be auto-generated by the gulp task
  'BBAdminCoreTpls',

  'BBAdminApp.services',
  'BBAdminApp.controllers',
  'BBAdminApp.directives',

  #Separate app modules
  'BBAdminApp.login',
  'BBAdminApp.dashboard',
  'BBAdminApp.calendar',
  'BBAdminApp.customers',
  'BBAdminApp.settings',
  'BBAdminApp.check-in'
]
angular.module('BBAdminApp.directives', [])
angular.module('BBAdminApp.services', [])
angular.module('BBAdminApp.controllers', [])

angular.module('BBAdminApp', dependencies)
#todo remove this (why wrapping a native function?)
.constant('UriTemplate', window.UriTemplate)
.config ['$stateProvider', '$urlRouterProvider', ($stateProvider, $urlRouterProvider) ->
  #We have to preserve the empty state as an abstract one, for this we always redirect to the default page
  $urlRouterProvider.when("/", "/dashboard")

  $urlRouterProvider.otherwise ($injector) ->

    $state = $injector.get('$state');

    $state.go('404', null, {
      location: false
    });

  $stateProvider
  .state 'admin', {
    url         : '/',
    abstract    : true,
    templateProvider : (TemplateService)->
      return TemplateService.get('/tpls/core/layout.html')
    controller  : 'LayoutCtrl'
  }
  .state '404', {
    url         : '/404',
    templateProvider : (TemplateService)->
      return TemplateService.get('/tpls/core/404.html')
    controller  : 'NotFoundCtrl'
  }

]
#Configuring the modules specific scripts lazyloader
.config ['$ocLazyLoadProvider', ($ocLazyLoadProvider) ->
#  $ocLazyLoadProvider.config {
#    debug: true
#  }
]
#Configuring the app to use the history API without the hashbang !#
.config ['$locationProvider', ($locationProvider) ->
  $locationProvider.html5Mode true;
]
#Configuring the toastr notification service
.config ['toastrConfig', (toastrConfig) ->
  angular.extend toastrConfig, {
    allowHtml     : true,
    positionClass : 'toast-bottom-right'
  }
]
#Configuring POST and PUT headers and body encoding
#This will hijack all POST and PUT requests
.config ['$httpProvider', 'UrlEncoderProvider', ($httpProvider, UrlEncoderProvider) ->
  $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
  $httpProvider.defaults.headers.put['Content-Type']  = 'application/x-www-form-urlencoded;charset=utf-8';
]
.config [
  'GeneralOptionsProvider',
  'CalendarOptionsProvider',
  'CheckInOptionsProvider',
  'CustomersOptionsProvider',
  'DashboardOptionsProvider',
  'LoginOptionsProvider',
  'SettingsOptionsProvider',
  (
    GeneralOptionsProvider,
    CalendarOptionsProvider,
    CheckInOptionsProvider,
    CustomersOptionsProvider,
    DashboardOptionsProvider,
    LoginOptionsProvider,
    SettingsOptionsProvider
  ) ->
#    SettingsOptionsProvider.setOption('use_default_states', false)
]